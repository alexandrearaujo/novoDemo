package br.com.mv.demo.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;

@Entity
@Table(name = "FILHO_TESTE")
@Getter @Setter @EqualsAndHashCode(of = "id")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class FilhoTeste implements Serializable {
	
	/**
	 * Generated by IDE
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name = "ID")
	@SequenceGenerator(name = "SEQ_FILHO_TESTE", sequenceName = "SEQ_FILHO_TESTE", allocationSize = 0)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SEQ_FILHO_TESTE")
	private Long id;
	
	@Column(name = "NOME")
	private String nome;
	
	@OneToMany(cascade = CascadeType.ALL, mappedBy = "filhoTeste", orphanRemoval = true)
	private List<TesteFilhoTeste> pais = new ArrayList<TesteFilhoTeste>();

}
